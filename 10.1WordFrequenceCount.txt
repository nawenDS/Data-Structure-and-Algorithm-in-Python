Section 2.4.3 provides an introduction to the concept of an abstract base class and the role of such classes in Python’s collections module. Methods that are de- clared to be abstract in such a base class must be implemented by concrete sub- classes. However, an abstract base class may provide concrete implementation of other methods that depend upon use of the presumed abstract methods. (This is an example of the template method design pattern.)
The collections module provides two abstract base classes that are relevant to our current discussion: the Mapping and MutableMapping classes. The Mapping class includes all nonmutating methods supported by Python’s dict class, while the MutableMapping class extends that to include the mutating methods. What we define as the map ADT in Section 10.1.1 is akin to the MutableMapping abstract base class in Python’s collections module.